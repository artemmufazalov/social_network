{"version":3,"sources":["components/pages/MessagesPage/Messages.module.css","components/pages/MessagesPage/Messages/MessageItem.module.css","components/pages/MessagesPage/Messages/MessageItem.js","components/pages/MessagesPage/Messages/NewMessageForm.js","components/pages/MessagesPage/DialogsList/DialogItem.js","components/pages/MessagesPage/Messages.js","components/pages/MessagesPage/MessagesContainer.js"],"names":["module","exports","MessageItem","props","className","s","message","messageProps","messageSender","name","messageTime","time","messageText","text","maxLength100","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","newMessageBox","newMessageTextArea","Field","component","Textarea","placeholder","rows","validate","required","buttonBox","sendButton","DialogItem","path","id","dialog","to","MessagesParser","classNames","messageStyles","toMeMessage","fromMeMessage","from","Messages","messagesContainerStyles","mainContainer","dialogsContainer","state","messagesPage","dialogsData","map","data","key","messagesMainContainer","messagesContainer","messages","m","values","sendNewMessage","newMessageBody","compose","connect","withAuthRedirect"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,cAAgB,gCAAgC,iBAAmB,mCAAmC,OAAS,yBAAyB,OAAS,yBAAyB,sBAAwB,wCAAwC,kBAAoB,oCAAoC,cAAgB,gCAAgC,KAAO,uBAAuB,mBAAqB,qCAAqC,UAAY,4BAA4B,WAAa,+B,oBCAjfD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,aAAe,kCAAkC,YAAc,iCAAiC,YAAc,iCAAiC,cAAgB,mCAAmC,YAAc,iCAAiC,cAAgB,qC,yJCuB3SC,EApBK,SAACC,GACjB,OACI,0BAAMC,UAAWC,IAAEC,SACf,yBAAKF,UAAWC,IAAEE,cACd,0BAAMH,UAAWC,IAAEG,eACdL,EAAMM,MAEX,0BAAML,UAAWC,IAAEK,aACdP,EAAMQ,OAIf,yBAAKP,UAAWC,IAAEO,aACbT,EAAMU,Q,kCCTjBC,EAAeC,YAAiB,KAsBvBC,cAAU,CAACC,KAAM,qBAAjBD,EApBQ,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,aAChBf,UAAWC,IAAEe,eACf,yBAAKhB,UAAWC,IAAEgB,oBACd,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXf,KAAM,iBACNgB,YAAY,qBACZC,KAAK,IACLC,SAAU,CAACC,IAAUd,MAEhC,yBAAKV,UAAWC,IAAEwB,WACd,4BAAQzB,UAAWC,IAAEyB,YAArB,a,QCPDC,EAVI,SAAC5B,GAChB,IAAI6B,EAAO,aAAe7B,EAAM8B,GAEhC,OACI,yBAAK7B,UAAWC,IAAE6B,QACd,kBAAC,IAAD,CAASC,GAAIH,GAAO7B,EAAMM,QCDhC2B,EAAiB,SAACjC,GAAW,IAAD,EAE9B,OACI,yBAAKC,UAAWiC,KAAU,mBACrBC,IAAcC,YAAmC,OAArBpC,EAAMG,QAAQ6B,IADrB,cAErBG,IAAcE,cAAqC,OAArBrC,EAAMG,QAAQ6B,IAFvB,KAItB,kBAAC,EAAD,CAAatB,KAAMV,EAAMG,QAAQA,QAASG,KAAMN,EAAMG,QAAQmC,KAAM9B,KAAMR,EAAMG,QAAQK,SAqCrF+B,EAhCE,SAACvC,GAQd,OACI,yBAAKC,UAAWuC,IAAwBC,eACpC,yBAAKxC,UAAWuC,IAAwBE,kBACnC1C,EAAM2C,MAAMC,aAAaC,YAAYC,KAAI,SAAAC,GAAI,OAC1C,kBAAC,EAAD,CAAYzC,KAAMyC,EAAKzC,KAAMwB,GAAIiB,EAAKjB,GAAIkB,IAAKD,EAAKjB,SAG5D,yBAAK7B,UAAWuC,IAAwBS,uBACpC,yBAAKhD,UAAWuC,IAAwBU,mBACnClD,EAAM2C,MAAMC,aAAaC,YAAY,GAAGM,SAASL,KAAI,SAAAM,GAAC,OAAI,kBAAC,EAAD,CAAgBjD,QAASiD,EACTJ,IAAKI,EAAEtB,SAGtF,kBAAC,EAAD,CACIa,MAAO3C,EAAM2C,MACb5B,SArBM,SAACsC,GAGnBrD,EAAMsD,eAFK,KACF,OACsBD,EAAOE,sBCb/BC,4BACXC,aAPoB,SAACd,GACrB,MAAO,CACHA,MAAOA,KAKc,CACrBW,qBAEJI,IAJWF,CAKbjB","file":"static/js/3.f84e5947.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Messages_mainContainer__3Fumo\",\"dialogsContainer\":\"Messages_dialogsContainer__1AC96\",\"dialog\":\"Messages_dialog__3DMev\",\"active\":\"Messages_active__2drC9\",\"messagesMainContainer\":\"Messages_messagesMainContainer__1Hz7b\",\"messagesContainer\":\"Messages_messagesContainer__37pKe\",\"newMessageBox\":\"Messages_newMessageBox__W48Yz\",\"logo\":\"Messages_logo__1wsFN\",\"newMessageTextArea\":\"Messages_newMessageTextArea__2h-Wt\",\"buttonBox\":\"Messages_buttonBox__2DaFm\",\"sendButton\":\"Messages_sendButton__1wpnL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessageItem_message__OlKN8\",\"messageProps\":\"MessageItem_messageProps__2Wmes\",\"messageText\":\"MessageItem_messageText__3qho2\",\"messageTime\":\"MessageItem_messageTime__2BziK\",\"messageSender\":\"MessageItem_messageSender__3J0C-\",\"toMeMessage\":\"MessageItem_toMeMessage__2zxp9\",\"fromMeMessage\":\"MessageItem_fromMeMessage__3-NLI\"};","import React from \"react\";\r\n\r\nimport s from \"./MessageItem.module.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <span className={s.message}>\r\n            <div className={s.messageProps}>\r\n                <span className={s.messageSender}>\r\n                    {props.name}\r\n                </span>\r\n                <span className={s.messageTime}>\r\n                    {props.time}\r\n                </span>\r\n            </div>\r\n\r\n            <div className={s.messageText}>\r\n                {props.text}\r\n            </div>\r\n\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nimport s from \"../Messages.module.css\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormControls\";\r\n\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst NewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}\r\n              className={s.newMessageBox}>\r\n            <div className={s.newMessageTextArea}>\r\n                <Field component={Textarea}\r\n                       name={\"newMessageBody\"}\r\n                       placeholder=\"Enter your message\"\r\n                       rows=\"5\"\r\n                       validate={[required, maxLength100]}/>\r\n            </div>\r\n            <div className={s.buttonBox}>\r\n                <button className={s.sendButton}>\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm({form: \"addNewMessageForm\"})(NewMessageForm);","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nimport s from \"../Messages.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport messageStyles from \"./Messages/MessageItem.module.css\"\r\nimport messagesContainerStyles from \"./Messages.module.css\";\r\nimport MessageItem from \"./Messages/MessageItem\";\r\nimport AddNewMessageFormRedux from \"./Messages/NewMessageForm\";\r\nimport DialogItem from \"./DialogsList/DialogItem\";\r\n\r\nconst MessagesParser = (props) => {\r\n\r\n    return (\r\n        <div className={classNames({\r\n            [messageStyles.toMeMessage]: props.message.to === \"Me\",\r\n            [messageStyles.fromMeMessage]: props.message.to !== \"Me\"\r\n        })}>\r\n            <MessageItem text={props.message.message} name={props.message.from} time={props.message.time}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Messages = (props) => {\r\n\r\n    const addNewMessage = (values) => {\r\n        let from = \"Me\";\r\n        let to = \"John\";\r\n        props.sendNewMessage(from, to, values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={messagesContainerStyles.mainContainer}>\r\n            <div className={messagesContainerStyles.dialogsContainer}>\r\n                {props.state.messagesPage.dialogsData.map(data => (\r\n                    <DialogItem name={data.name} id={data.id} key={data.id}/>))}\r\n            </div>\r\n\r\n            <div className={messagesContainerStyles.messagesMainContainer}>\r\n                <div className={messagesContainerStyles.messagesContainer}>\r\n                    {props.state.messagesPage.dialogsData[0].messages.map(m => <MessagesParser message={m}\r\n                                                                                               key={m.id}/>)}\r\n                </div>\r\n\r\n                <AddNewMessageFormRedux\r\n                    state={props.state}\r\n                    onSubmit={addNewMessage}\r\n                />\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;\r\n","import {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nimport {sendNewMessage} from \"../../../BLL/reducers/messagesPageReducer\";\r\nimport {withAuthRedirect} from \"../../../hocs/WithAuthRedirect\";\r\nimport Messages from \"./Messages\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        sendNewMessage,\r\n    }),\r\n    withAuthRedirect,\r\n)(Messages);"],"sourceRoot":""}